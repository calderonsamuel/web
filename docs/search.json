[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Samuel Calderon Serrano",
    "section": "",
    "text": "Twitter\n  \n  \n    \n     Github\n  \n  \n    \n     Linkedin\n  \n\n  \n  \n\nPresentación\nPolitólogo de la Universidad Antonio Ruiz de Montoya. Actualmente trabaja en la Superintendencia Nacional de Educación Universitaria - SUNEDU como miembro del Equipo Técnico Normativo de la Dirección de Licenciamiento. Su desempeño profesional ha sido siempre en el sector público, participando en iniciativas de recojo, análisis y sistematización de información con miras a mejorar la calidad de los servicios brindados a la ciudadanía.\nMiembro de la organización DecideBien, colabora ocasionalmente en iniciativas de código abierto. Durante los últimos meses, ha dictado talleres de Elaboración de Productos de Datos a profesionales de las ciencias sociales. Proviene de Lima, Perú.\nDescarga mi CV.\n\n\nIntereses\n\nDatos abiertos\nEducación superior\nEnseñanza de herramientas de uso de datos\n\n\n\nEducación\n\nBach. En Ciencia Política, 2016. Universidad Antonio Ruiz de Montoya.\n\n\n\n\n\n\n\n\n\nExperiencia\n\n\n\n\n\n\ncard = function(\n  title = \"Card title\", \n  subtitle = \"Card subtitle\", \n  details = \"body text\",\n  start_date = \"Mar 2020\",\n  end_date = \"Actualidad\",\n  city\n) {\n  return htl.html`\n    <div class = \"card\">\n    \n      <!-- header - start -->\n      <div class = \"d-flex p-3\">\n      \n        <!-- image -->\n        <div class = \"bg-primary me-2\">\n          <div style = \"width: 60px; height: 60px\">\n          </div>\n        </div>\n        \n        <!-- title -->\n        <div class = \"flex-grow-1\">\n          <h5 class=\"card-title fw-bold text-muted\">${title}</h5>\n          <h6 class=\"card-subtitle mb-2\">${subtitle}</h6>\n          <p class=\"text-muted\">${start_date} - ${end_date}. ${city}</p>\n        </div>\n        \n      </div>\n      <!-- header - end -->\n      \n      <div class = \"card-body pt-0\">\n      ${details}\n      </div>  \n    </div>\n  `\n}\nviewof exp1 = card(\n    \"Integrante del Equipo Técnico Normativo de la Dirección de Licenciamiento\",\n    \"Superintendencia Nacional de Educación Universitaria\",\n    \"Responsabilidades: Recopilación, análisis y sistematización de información sobre la educación superior a nivel nacional e internacional. Modelo de Renovación de Licencia Institucional (Modelo 2.0)\"\n)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Samuel Calderon Serrano",
    "section": "",
    "text": "Twitter\n  \n  \n    \n     Github\n  \n  \n    \n     Linkedin\n  \n\n  \n  \n\nPresentación\nPolitólogo de la Universidad Antonio Ruiz de Montoya. Actualmente trabaja en la Superintendencia Nacional de Educación Universitaria - SUNEDU como miembro del Equipo Técnico Normativo de la Dirección de Licenciamiento. Su desempeño profesional ha sido siempre en el sector público, participando en iniciativas de recojo, análisis y sistematización de información con miras a mejorar la calidad de los servicios brindados a la ciudadanía.\nMiembro de la organización DecideBien, colabora ocasionalmente en iniciativas de código abierto. Durante los últimos meses, ha dictado talleres de Elaboración de Productos de Datos a profesionales de las ciencias sociales. Proviene de Lima, Perú.\nDescarga mi CV.\n\n\nIntereses\n\nDatos abiertos\nEducación superior\nEnseñanza de herramientas de uso de datos\n\n\n\nEducación\n\nBach. En Ciencia Política, 2016. Universidad Antonio Ruiz de Montoya.\n\n\n\n\n\n\n\n\n\nExperiencia\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntegrante del Equipo Técnico Normativo de la Dirección de Licenciamiento\nSuperintendencia Nacional de Educación Universitaria\nAgo. 2020 - Actualidad. Lima\n\n\n  Responsabilidades:\n  \n  * Recopilación, análisis y sistematización de información sobre la educación superior a nivel nacional e internacional\n  * Modelo de Renovación de Licencia Institucional (Modelo 2.0)\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSeguimiento al Plan Sectorial de Lucha contra la Corrupción\nMinisterio de Vivienda, Construcción y Saneamiento\nAbr. 2019 - Ago. 2020. Lima\n\n\nSeguimiento, sistematización, procesamiento y análisis de información, y elaboración de instructivos para la Oficina de Integridad y Lucha contra la Corrupción.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAsistente Académico de Capacitación\nEscuela Nacional de Administración Pública – ENAP\nOct. 2018 - Dic. 2018. Lima\n\n\nAsistencia académica presencial y virtual para la implementación, ejecución y evaluación de cursos de capacitación.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSupervisor de encuestadores\nMinisterio de Salud\nMay. 2018 - May. 2018. Lima\n\n\nSupervisión a encuestadores, procesamiento y análisis de consistencia de la información recogida en el Proyecto Termómetro Salud de la DGOS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSupervisor de encuestadores\nMinisterio de Salud\nNov. 2017 - Dic. 2017. Lima\n\n\nSupervisión a encuestadores, procesamiento y análisis de consistencia de la información recogida en el Proyecto piloto Semáforo Salud de la DGOS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOperador de aplicación de Encuestas\nInstituto Nacional de Estadística e Informática\nJun. 2016 - Set. 2017. Lima\n\n\nLevantamiento de información en hogares, procesamiento y análisis de consistencia de la información recogida en la Encuesta Nacional de Hogares – ENAHO"
  },
  {
    "objectID": "posts/index.html",
    "href": "posts/index.html",
    "title": "Blog",
    "section": "",
    "text": "Monitorear ejecución presupuestal desde R\n\n\n\n\n\n\n\n\n\n\n\n\nAug 9, 2022\n\n\n2 min\n\n\n4/26/23, 3:45:26 PM\n\n\n\n\n\n\n  \n\n\n\n\nBug arreglado en Calculadora Renacyt\n\n\n\n\n\n\n\n\n\n\n\n\nJul 23, 2022\n\n\n1 min\n\n\n4/27/23, 8:47:37 AM\n\n\n\n\n\n\n  \n\n\n\n\nDos paquetes para mapas peruanos\n\n\n\n\n\n\n\n\n\n\n\n\nOct 12, 2021\n\n\n2 min\n\n\n4/26/23, 3:32:36 PM\n\n\n\n\n\n\n  \n\n\n\n\nCódigo noob de JS\n\n\n\n\n\n\n\n\n\n\n\n\nApr 25, 2020\n\n\n2 min\n\n\n4/26/23, 3:31:17 PM\n\n\n\n\n\n\n  \n\n\n\n\nPropuesta para elegir preguntas en conferencia de prensa\n\n\n\n\n\n\n\n\n\n\n\n\nApr 18, 2020\n\n\n6 min\n\n\n4/26/23, 3:35:22 PM\n\n\n\n\n\n\n  \n\n\n\n\n¿Por qué debo dejar que usen mi trabajo?\n\n\n\n\n\n\n\n\n\n\n\n\nMar 10, 2020\n\n\n5 min\n\n\n4/26/23, 3:30:40 PM\n\n\n\n\n\n\n  \n\n\n\n\n¿Cómo hacer un gráfico de parlamento en R?\n\n\n\n\n\n\n\n\n\n\n\n\nJan 29, 2020\n\n\n5 min\n\n\n4/26/23, 3:32:26 PM\n\n\n\n\n\n\n  \n\n\n\n\nCédula Elecciones 2020 usando ggplot2 (parte 3)\n\n\n\n\n\n\n\n\n\n\n\n\nJan 24, 2020\n\n\n9 min\n\n\n4/26/23, 3:47:44 PM\n\n\n\n\n\n\n  \n\n\n\n\nCédula Elecciones 2020 usando ggplot2 (parte 2)\n\n\n\n\n\n\n\n\n\n\n\n\nJan 18, 2020\n\n\n6 min\n\n\n4/26/23, 3:46:17 PM\n\n\n\n\n\n\n  \n\n\n\n\nCédula Elecciones 2020 usando ggplot2 (parte 1)\n\n\n\n\n\nCódigo y explicación para generar una cédula de elecciones congresales - Diseño\n\n\n\n\n\n\nJan 15, 2020\n\n\n7 min\n\n\n4/26/23, 2:52:08 PM\n\n\n\n\n\n\n  \n\n\n\n\nInicios\n\n\n\n\n\nRazones para la creación de este blog\n\n\n\n\n\n\nJan 13, 2020\n\n\n5 min\n\n\n4/26/23, 2:42:53 PM\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About",
    "section": "Education",
    "text": "Education\nUniversity of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St. Paul MA B.A in Economics | Sept 2007 - June 2011"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "Samuel Calderon Serrano",
    "section": "Experience",
    "text": "Experience\n\n\n\n\n\n\nWengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Spet 2012 - April 2018"
  },
  {
    "objectID": "about/index.html",
    "href": "about/index.html",
    "title": "Samuel Calderon Serrano",
    "section": "",
    "text": "Twitter\n  \n  \n    \n     Github\n  \n  \n    \n     Linkedin\n  \n\n  \n  \n\nPresentación\nPolitólogo de la Universidad Antonio Ruiz de Montoya. Actualmente trabaja en la Superintendencia Nacional de Educación Universitaria - SUNEDU como miembro del Equipo Técnico Normativo de la Dirección de Licenciamiento. Su desempeño profesional ha sido siempre en el sector público, participando en iniciativas de recojo, análisis y sistematización de información con miras a mejorar la calidad de los servicios brindados a la ciudadanía.\nMiembro de la organización DecideBien, colabora ocasionalmente en iniciativas de código abierto. Durante los últimos meses, ha dictado talleres de Elaboración de Productos de Datos a profesionales de las ciencias sociales. Proviene de Lima, Perú.\nDescarga mi CV.\n\n\nIntereses\n\nDatos abiertos\nEducación superior\nEnseñanza de herramientas de uso de datos\n\n\n\nEducación\n\nBach. En Ciencia Política, 2016. Universidad Antonio Ruiz de Montoya.\n\n\n\n\n\n\n\n\n\nExperiencia\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntegrante del Equipo Técnico Normativo de la Dirección de Licenciamiento\nSuperintendencia Nacional de Educación Universitaria\nAgo. 2020 - Actualidad. Lima\n\n\n  Responsabilidades:\n  \n  * Recopilación, análisis y sistematización de información sobre la educación superior a nivel nacional e internacional\n  * Modelo de Renovación de Licencia Institucional (Modelo 2.0)\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSeguimiento al Plan Sectorial de Lucha contra la Corrupción\nMinisterio de Vivienda, Construcción y Saneamiento\nAbr. 2019 - Ago. 2020. Lima\n\n\nSeguimiento, sistematización, procesamiento y análisis de información, y elaboración de instructivos para la Oficina de Integridad y Lucha contra la Corrupción.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAsistente Académico de Capacitación\nEscuela Nacional de Administración Pública – ENAP\nOct. 2018 - Dic. 2018. Lima\n\n\nAsistencia académica presencial y virtual para la implementación, ejecución y evaluación de cursos de capacitación.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSupervisor de encuestadores\nMinisterio de Salud\nMay. 2018 - May. 2018. Lima\n\n\nSupervisión a encuestadores, procesamiento y análisis de consistencia de la información recogida en el Proyecto Termómetro Salud de la DGOS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSupervisor de encuestadores\nMinisterio de Salud\nNov. 2017 - Dic. 2017. Lima\n\n\nSupervisión a encuestadores, procesamiento y análisis de consistencia de la información recogida en el Proyecto piloto Semáforo Salud de la DGOS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOperador de aplicación de Encuestas\nInstituto Nacional de Estadística e Informática\nJun. 2016 - Set. 2017. Lima\n\n\nLevantamiento de información en hogares, procesamiento y análisis de consistencia de la información recogida en la Encuesta Nacional de Hogares – ENAHO"
  },
  {
    "objectID": "posts/2020-01-13-inicios/index.html",
    "href": "posts/2020-01-13-inicios/index.html",
    "title": "Inicios",
    "section": "",
    "text": "Este blog se hace con la intención de compartir diferentes tipos de trabajo. Desde el año pasado emprendí la tarea de aprender el lenguaje R por mi cuenta, para ello me valí de varias plataformas en las que a través de artículos, videos, tutoriales y otros, he podido alcanzar un nivel más o menos avanzado en la comprensión del lenguaje."
  },
  {
    "objectID": "posts/2020-01-13-inicios/index.html#para-qué-un-blog",
    "href": "posts/2020-01-13-inicios/index.html#para-qué-un-blog",
    "title": "Inicios",
    "section": "",
    "text": "Este blog se hace con la intención de compartir diferentes tipos de trabajo. Desde el año pasado emprendí la tarea de aprender el lenguaje R por mi cuenta, para ello me valí de varias plataformas en las que a través de artículos, videos, tutoriales y otros, he podido alcanzar un nivel más o menos avanzado en la comprensión del lenguaje."
  },
  {
    "objectID": "posts/2020-01-13-inicios/index.html#la-importancia-de-rstudio",
    "href": "posts/2020-01-13-inicios/index.html#la-importancia-de-rstudio",
    "title": "Inicios",
    "section": "La importancia de RStudio",
    "text": "La importancia de RStudio\nQuiero resaltar que ha sido particularmente beneficioso que la comunidad que utiliza R es, además, especialmente activa en lo que respecta a enseñar a otros a utilizar dicha herramienta. Entre ellos destaco el trabajo que hace el equipo de RStudio, quienes además de desarrollar el IDE más utilizado actualmente para trabajar con R, han desarrollado una serie de paquetes que facilitan el acceso al mundo del famoso “Data Science” bajo la filosofía del tidyverse. Hago una mención honrosa al paquete blogdown, que me permite desarrollar esta web de una manera bastante sencilla."
  },
  {
    "objectID": "posts/2020-01-13-inicios/index.html#pequeña-reseña",
    "href": "posts/2020-01-13-inicios/index.html#pequeña-reseña",
    "title": "Inicios",
    "section": "Pequeña reseña",
    "text": "Pequeña reseña\nDebo decir que este no es mi primer intento de tener un espacio virtual. El año 2013, cuando estaba en mi tercer año universitario, junto a un grupo de la carrera desarrollamos en Wordpress un blog llamado Polinóptico que tenía la intención de ser un espacio en el que estudiantes de la carrera de Ciencia Política de la Universidad Antonio Ruiz de Montoya pudieran compartir sus trabajos y ser leídos por quien quisiera. Lamentablemente ese entusiasmo no llegó a la masa de estudiantes de la carrera, y el blog murió, no sin antes haber tenido varios intentos de ser revivido.\nEse mismo año llevé una clase de estadística dictada por José Incio en la que me fue bien. En esa clase conocí por primera vez el lenguaje R. Incio nos enseñaba conceptos de estadística descriptiva e inferencial ayudándose de scripts de R que tenía guardados, en algunas ocasiones editándolos en vivo para algún tipo de personalización, especialmente cuando se trataba de gráficos. A pesar de que trató de enseñarnos los beneficios de usar R, al final preferí prestar más atención al aprendizaje de SPSS en las clases de práctica porque resultaba más intuitivo y cercano a lo que ya conocía, Excel.\nEn los años siguientes, no tuve necesidad de usar ni Excel, ni SPSS, ni R para ningún trabajo de la universidad (no exagero), ni para ningún trabajo pagado eventual. La única excepción a esto fue la clase de Análisis de Regresión dictada por la gran Heidi Sada durante mi intercambio en la Ibero, Ciudad de México.\nEl 2014 alguien que no recuerdo ahora me presentó la plataforma Coursera en la que se podían llevar cursos MOOC de buena calidad y gratuitos. Después de llevar algunos por curiosidad, en setiembre del 2017 decidí llevar la “Data Science Specialization” de la Universidad de John Hopkins, que hacía uso intensivo de R en sus explicaciones. Fue mi segundo acercamiento al lenguaje y el primero al IDE RStudio. No terminé la especialización en Coursera porque los últimos módulos se me complicaron demasiado, y además ya tenía otro proyecto en mente.\nTodo este interludio sobre mi llegada a R es para decir que en el verano 2018 decidí tener un blog propio en Wordpress en el que haría tutoriales sobre R. Un plan bastante ambicioso para alguien que apenas había empezado a conocer lo más básico del lenguaje. Logré hacer dos entradas, la primera sobre cómo instalar R y la segunda sobre cómo instalar RStudio. La idea era ir aprendiendo R e ir haciendo tutoriales de lo que acababa de aprender. Nunca hice público el blog porque ahí murió. Nunca le agregué más contenido.\nLo que sí hice ese año fue estudiar estadística aplicada y SPSS en la escuela del INEI. Aunque aprendí bastante en estos cursos, el mayor uso que le encontré fue convencerme de que R era superior.\nFue recién en enero del 2019 que se juntaron varias cosas que me permitieron aprender realmente el lenguaje:\n\nNo tenía trabajo, por lo tanto tampoco tenía dinero para matricularme en cursos.\nMi enamorada se fue de viaje por varios meses y yo sentía que necesitaba tener el tiempo y la cabeza ocupados en algo productivo.\nEsta es más de ñoño. No me gusta salir en verano porque hace mucho calor en la calle y el sol es horrible, así que me la pasaba todo el tiempo en mi casa.\n\nAsí fue que terminé en tiempo récord el programa de estudios Data Scientist with R de la plataforma Datacamp e hice una shiny app para no olvidar lo que estaba aprendiendo.\nDurante el resto del año hice todo lo posible para usar R con cualquier excusa. En esto fue de gran ayuda conocer la existencia de RStudio.cloud porque me permitió usar R en el trabajo sin necesidad de pedir permiso a la oficina de tecnologías de la información para instalarlo.\nCreé este blog en setiembre 2019 para mantener activo mi conocimiento de las funciones de los paquetes blogdown y Rmarkdown. Este es el tercer intento de blog, y para asegurarme de que funcione, esta vez lo hago público el mismo día en que me compro el dominio. Si cuento con lectores estaré muy agradecido de que me hagan llegar sugerencias de temas a tratar en el futuro. No soy un politólogo que bloguea sobre R, sino un politólogo que usa R para bloguear."
  },
  {
    "objectID": "posts/2020-01-15-cedula-2020-ggplot2-parte-1/index.html",
    "href": "posts/2020-01-15-cedula-2020-ggplot2-parte-1/index.html",
    "title": "Cédula Elecciones 2020 usando ggplot2 (parte 1)",
    "section": "",
    "text": "No tengo conocimiento sobre el software que ha utilizado ONPE para diseñar la cédula que se utilizará en nuestras elecciones congresales, pero es posible intentar replicarla en R, usando funciones de la colección de paquetes del tidyverse.\nPara ello, primero cargamos los paquetes. Omitiré aquí los mensajes y warnings que aparecerán en una sesión normal. Además, en general utilizaré una línea por cada parámetro en las funciones que utilice, de modo que sea fácil de visualizar el código en teléfonos móviles.\n\nlibrary(tidyverse)\n\nEl siguiente paso será crear una superficie en la que irá el gráfico. Usaremos las funciones de ggplot2 para esto y para todas las futuras personalizaciones. Utilizaremos un ancho de 15 unidades (eje x) y un alto de 32 unidades (eje y) para mantener las proporciones definidas por la ONPE en la RESOLUCIÓN JEFATURAL Nº 000263-2019-JN/ONPE.\n\ncedula &lt;- ggplot()+\n  # límites del plano\n  xlim(c(0, 15))+\n  ylim(c(0, 32))\n\ncedula\n\n\n\n\nDebido a que las líneas divisorias y el fondo no nos ayudan para nuestros propósitos, nos vamos a deshacer de ellos usando theme_void(). Para mantener la referencia de los límites del gráfico, crearemos un marco con borde negro utilizando geom_rect().\n\ncedula &lt;- cedula +\n  theme_void() +\n    # marco rectangular con borde negro\n    geom_rect(aes(xmin = 0, \n                  xmax = 15, \n                  ymin = 0, \n                  ymax = 32), \n              color = \"black\", \n              alpha = 0)\n\ncedula\n\n\n\n\nLo siguiente es establecer el espacio que ocuparán los elementos de la cédula. En este caso, podemos llamar instrucciones a los marcos de texto que contienen las instrucciones de cómo votar. Los nombres de las columnas del tibble instrucciones nos permitirán identificarlos con los parámetros de geom_rect() cuando lo agreguemos al gráfico.\n\ninstrucciones &lt;- tribble(\n  ~xmin, ~xmax, ~ymin, ~ymax,\n  0.6,  11.8,  28.4,  29.9,\n  12.1,  14.4,  28.4,  29.9)\n\ncedula &lt;- cedula +\n    # contenedores debajo del título con instruciones\n    geom_rect(data = instrucciones, \n              aes(xmin = xmin, \n                  xmax = xmax,\n                  ymin = ymin, \n                  ymax = ymax), \n              alpha = 0.25)\ncedula\n\n\n\n\nLlamaremosrectangulos a los marcos en los que van contenidos los nombres de las agrupaciones políticas. Debido a que son varios contenedores y la distancia entre ellos es uniforme, crearemos los valores del eje Y usando un generador de secuencias. Los valores del eje X, en cambio, son constantes.\n\nrectangulos &lt;- tibble(xmin = 0.6, \n                      xmax = 11.8, \n                      ymin= seq(\n                        from = 27.3, \n                        to = 2.1, \n                        by = -1.2), \n                      ymax = ymin + 1)\n\ncedula &lt;- cedula +\n# rectángulos para nombres de partidos\n    geom_rect(data = rectangulos, \n              aes(xmin = xmin, \n                  xmax = xmax,\n                  ymin = ymin, \n                  ymax = ymax), \n              alpha = 0.15)\n\ncedula\n\n\n\n\nEl tibble preferencial contiene los cuadrados en los que el votante puede marcar el logo de la agrupación política de su preferencia. Modificando un poco su ubicación el eje X en dos ocasiones, permitirá tener también los cuadrados de voto preferencial.\n\npreferencial &lt;- tibble(\n  xmin = 10.8, \n  xmax = 11.8, \n  ymin= seq(\n    from = 27.3, \n    to = 2.1, \n    by = -1.2), \n  ymax = ymin + 1)\n\ncedula &lt;- cedula +\n  # cuadrados para logo \n  geom_rect(data = preferencial, \n            aes(xmin = xmin, \n                xmax = xmax,\n                ymin = ymin, \n                ymax = ymax), \n            color = \"black\", \n            fill = \"white\") +\n  # cuadrado para voto preferencial 1\n  geom_rect(data = preferencial, \n            aes(xmin = xmin + 1.3, \n                xmax = xmax + 1.3,\n                ymin = ymin, \n                ymax = ymax), \n            color = \"black\", \n            fill = \"white\") +\n  # cuadrado para voto preferencial 1\n  geom_rect(data = preferencial, \n            aes(xmin = xmin + 2.6, \n                xmax = xmax + 2.6,\n                ymin = ymin, \n                ymax = ymax), \n            color = \"black\", \n            fill = \"white\")\n\ncedula\n\n\n\n\nEn la segunda parte del post explicaré cómo agregar el texto, tanto de los nombres de los partidos políticos como de las instrucciones para votar."
  },
  {
    "objectID": "posts/2020-01-18-cedula-2020-ggplot2-parte-2/index.html",
    "href": "posts/2020-01-18-cedula-2020-ggplot2-parte-2/index.html",
    "title": "Cédula Elecciones 2020 usando ggplot2 (parte 2)",
    "section": "",
    "text": "En el post anterior mostramos cómo crear el “esqueleto” de la cédula. En este, en cambio, incluiremos el texto y los logos de los partidos. Primero lo primero, habilitamos los paquetes del tidyverse.\nlibrary(tidyverse)\nNos aseguramos de contar con los objetos creados en el paso anterior. Especialmente el objeto cedula, que contiene las instrucciones de nuestro “esqueleto”.\nls()\n\n[1] \"cedula\"          \"has_annotations\" \"instrucciones\"   \"preferencial\"   \n[5] \"rectangulos\"\nComenzaremos por crear un vector que contenga los nombres de los partidos políticos en contienda, basados en el orden que obtuvieron en el sorteo realizado por la ONPE para determinar la posición en la cédula. Lo llamamos partidos. .\npartidos &lt;- c(\n  \"EL FRENTE AMPLIO POR JUSTICIA, VIDA Y LIBERTAD\",\n  \"FUERZA POPULAR\",\n  \"JUNTOS POR EL PERU\",\n  \"PERU PATRIA SEGURA\",\n  \"TODOS POR EL PERU\",\n  \"ALIANZA PARA EL PROGRESO\",\n  \"PARTIDO MORADO\",\n  \"ACCION POPULAR\",\n  \"AVANZA PAIS – PARTIDO DE INTEGRACION SOCIAL\",\n  \"RENACIMIENTO UNIDO NACIONAL\",\n  \"PODEMOS PERU\",\n  \"UNION POR EL PERU\",\n  \"PARTIDO DEMOCRATICO SOMOS PERU\",\n  \"DEMOCRACIA DIRECTA\",\n  \"PARTIDO APRISTA PERUANO\",\n  \"PERU NACION\",\n  \"FRENTE POPULAR AGRICOLA FIA DEL PERU- FREPAP\",\n  \"PARTIDO POLITICO CONTIGO\",\n  \"PARTIDO POLITICO NACIONAL PERU LIBRE\",\n  \"VAMOS PERU\",\n  \"SOLIDARIDAD NACIONAL\",\n  \"PARTIDO POPULAR CRISTIANO - PPC\")\nDel mismo modo que utilizamos una secuencia para generar el objeto preferencial en la primera parte, generamos una secuencia para la ubicación de los nombres de los partidos. Esta vez, la generamos directamente dentro de geom_text(), la función que nos permite colocar texto en un gráfico de ggplot. Tengamos en cuenta que el argumento size cambiará según el tamaño en pixeles que le hayamos asignado al gráfico1.\ncedula &lt;- cedula +\n  geom_text(\n    aes(x = 0.8, \n        y = seq(\n          from = 27.8, \n          to = 2.6, \n          by = -1.2), \n        label = partidos),\n      fontface = \"bold\",\n      size = 1.5,\n      hjust = 0)\ncedula\nLo siguiente es incluir el título de la cédula. Para esto utilizamos nuevamente geom_text(). Esta vez será necesario utilizar un linebreak (\\n) para tener el texto en dos líneas.\ncedula &lt;- cedula +\n  geom_text(\n    aes(x = 7.5, \n        y = 30.6, \n        label = \"ELECCIONES CONGRESALES\\nEXTRAORDINARIAS 2020\"), \n    fontface = \"bold\",\n    size = 2.1,\n    lineheight = 0.8)\ncedula\nIncluyamos ahora las instrucciones que indican cómo votar. Nuevamente, geom_text() nos servirá para lograrlo. En esta ocasión incluiremos más de un linebreak en algunos casos.\ncedula &lt;- cedula +\n  geom_text(\n    aes(x = 6.3, \n        y = 29.6, \n        label = \"ORGANIZACIÓN POLÍTICA\"),\n    fontface = \"bold\",\n    size = 1.2)+\n  geom_text(\n    aes(x = 6.3,\n        y = 28.9,\n        label = \"MARQUE CON UNA CRUZ  +   O UN ASPA   X  DENTRO DEL RECUADRO DEL SÍMBOLO\\nDE SU PREFERENCIA\"),\n    size = 0.9) +\n  geom_text(\n    aes(x = 13.25,\n        y = 29.5,\n        label = \"VOTO\\nPREFERENCIAL\"),\n    fontface = \"bold\",\n    size = 1.05,\n    lineheight = 0.8) +\n  geom_text(\n    aes(x = 13.25,\n        y = 28.9,\n        label = \"SI DESEA COLOQUE DENTRO\\nDE LOS RECUADROS UNO O DOS\\nNÚMEROS DE LOS CANDIDATOS\\nDE SU PREFERENCIA\"),\n    size = 0.54,\n    lineheight = 0.9)\n\ncedula\n¡Cada vez estamos más cerca! El siguiente paso es incluir los logos de las agrupaciones políticas."
  },
  {
    "objectID": "posts/2020-01-18-cedula-2020-ggplot2-parte-2/index.html#footnotes",
    "href": "posts/2020-01-18-cedula-2020-ggplot2-parte-2/index.html#footnotes",
    "title": "Cédula Elecciones 2020 usando ggplot2 (parte 2)",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nEn esta ocasión, el tamaño del gráfico es de 3 x 6.4 pulgadas, manteniendo la proporción del tamaño oficial.↩︎"
  },
  {
    "objectID": "posts/2020-04-18-propuesta-para-elegir-preguntas-en-conferencia-de-prensa/index.html",
    "href": "posts/2020-04-18-propuesta-para-elegir-preguntas-en-conferencia-de-prensa/index.html",
    "title": "Propuesta para elegir preguntas en conferencia de prensa",
    "section": "",
    "text": "Casi todos los días vemos las conferencias de prensa que el presidente brinda. En ellas nos da las nuevas cifras importantes acerca del avance del covid19, nuevas medidas del gobierno y respuestas a preguntas de la prensa. Respecto a este último punto, no se conoce de fuentes oficiales la metodología a través de la cuál se realiza la elección de preguntas de la prensa. No me ha parecido que se hayan estado escogiendo preguntas malas, pero me quedé con la duda.\nDecidí consultarle a internet. El único medio que reportó algo acerca del tema fue Líbero (muy para mi sorpresa), y en realidad se trató de un artículo acerca de un hilo en twitter realizado por Eloy Marchán.\n\n\n(1/4) ¿Cómo salen las preguntas que el presidente @MartinVizcarraC responde en las \"conferencias de prensa\" que da cada día?-Hay un chat de Whatsapp llamado \"Actividades Palacio\", lo administran los funcionarios Gabriela Carrillo y Juan Francisco Celis y tiene 172 integrantes. pic.twitter.com/Fc43JZRj3n\n\n— Eloy Marchán (@eloymarchan) 16 de abril de 2020\n\n\nEn pocas palabras, según su explicación, existe un grupo de Whatsapp integrado por funcionarios y periodistas de varios medios de comunicación a través del cual se les comunica qué medios podrán enviar sus preguntas, que luego son respondidas en la conferencia de prensa. Los medios son escogidos a través de un sorteo.\nEl asunto es que, según Marchán, no se sabe en qué consiste ese sorteo. Yo creo que es una duda razonable, e innecesaria de mantener porque podría tener una solución muy simple."
  },
  {
    "objectID": "posts/2020-04-18-propuesta-para-elegir-preguntas-en-conferencia-de-prensa/index.html#el-motivo",
    "href": "posts/2020-04-18-propuesta-para-elegir-preguntas-en-conferencia-de-prensa/index.html#el-motivo",
    "title": "Propuesta para elegir preguntas en conferencia de prensa",
    "section": "",
    "text": "Casi todos los días vemos las conferencias de prensa que el presidente brinda. En ellas nos da las nuevas cifras importantes acerca del avance del covid19, nuevas medidas del gobierno y respuestas a preguntas de la prensa. Respecto a este último punto, no se conoce de fuentes oficiales la metodología a través de la cuál se realiza la elección de preguntas de la prensa. No me ha parecido que se hayan estado escogiendo preguntas malas, pero me quedé con la duda.\nDecidí consultarle a internet. El único medio que reportó algo acerca del tema fue Líbero (muy para mi sorpresa), y en realidad se trató de un artículo acerca de un hilo en twitter realizado por Eloy Marchán.\n\n\n(1/4) ¿Cómo salen las preguntas que el presidente @MartinVizcarraC responde en las \"conferencias de prensa\" que da cada día?-Hay un chat de Whatsapp llamado \"Actividades Palacio\", lo administran los funcionarios Gabriela Carrillo y Juan Francisco Celis y tiene 172 integrantes. pic.twitter.com/Fc43JZRj3n\n\n— Eloy Marchán (@eloymarchan) 16 de abril de 2020\n\n\nEn pocas palabras, según su explicación, existe un grupo de Whatsapp integrado por funcionarios y periodistas de varios medios de comunicación a través del cual se les comunica qué medios podrán enviar sus preguntas, que luego son respondidas en la conferencia de prensa. Los medios son escogidos a través de un sorteo.\nEl asunto es que, según Marchán, no se sabe en qué consiste ese sorteo. Yo creo que es una duda razonable, e innecesaria de mantener porque podría tener una solución muy simple."
  },
  {
    "objectID": "posts/2020-04-18-propuesta-para-elegir-preguntas-en-conferencia-de-prensa/index.html#la-propuesta",
    "href": "posts/2020-04-18-propuesta-para-elegir-preguntas-en-conferencia-de-prensa/index.html#la-propuesta",
    "title": "Propuesta para elegir preguntas en conferencia de prensa",
    "section": "La propuesta",
    "text": "La propuesta\nEsta propuesta se basa en el supuesto de que es mejor hacer un sorteo de preguntas y no uno de medios de comunicación.\n\nPaso 1: Recolectar las preguntas\nPara esto se puede usar un servicio de recolección de formularios/encuestas, como el de Google Forms. Basta con tener dos campos de llenado en el formulario: uno de identificación y uno en el que se brinde el detalle de la pregunta.\nEl campo de identificación necesitaría que los medios ingresen una contraseña que previamente los funcionarios les hayan brindado. La contraseña es única por medio de comunicación y, para mayor seguridad, puede ser actualizada diariamente.\nEn el segundo campo de llenado los medios de comunicación ingresan sus preguntas. Se podría poner un límite de caracteres para asegurar que la pregunta no sea más larga que la respuesta que se brindará.\nAquí debajo pongo un formulario de ejemplo en el que sólo se puede llenar el campo de pregunta si se ingresa primero una contraseña adecuada. La contraseña de este formulario consiste de 16 caracteres alfanuméricos aleatorios.\n\nContraseña: sEcVwNCLpKqf8oH3\n\n\nCargando…\n\nDespués de llenar algunas preguntas en el formulario, obtuve la siguiente tabla. Esta tabla se irá actualizando conforme le lleguen nuevas preguntas.\n\n\nPara trabajar el ejemplo, tomaré las cuatro (4) observaciones que yo ingresé. Con un cambio en los encabezados y un nuevo formato la tabla se ve así.\n\n\n\nEjemploHoraContraseñaPregunta2020-04-17 22:34:32sEcVwNCLpKqf8oH3En vista de las observaciones emitidas por los especialistas Fulano, Mengana y Sotana acerca de la medida X, ¿cuál será la nueva estrategia del gobierno?2020-04-17 22:38:38sEcVwNCLpKqf8oH3Las periodistas Fulana y Mengana denunciaron los hechos 1 y 2 ocurridos en las regiones X y Z. ¿Qué medidas está tomando el ministerio A para prevenir que vuelvan a ocurrir?2020-04-17 22:40:27sEcVwNCLpKqf8oH3Los médicos de la provincia A de la región X denunciaron la falta de material en el hospital regional. ¿Desde cuándo se tenía conocimiento de este hecho y por qué no se logró enfrentar a tiempo?2020-04-17 22:42:12sEcVwNCLpKqf8oH3El funcionario Fulano ha declarado X en el medio A. ¿Es esta la postura oficial del gobierno?\n\n\nLa columna Hora se genera de manera automática en Google Forms e indica la hora y fecha en que fue ingresada la pregunta. Cuando cada medio tenga su contraseña, la columna Contraseña tendría contraseñas diferentes en cada fila.\n\n\nPaso 2: Sortear las preguntas\nUna vez obtenida la tabla de preguntas se debe realizar el sorteo y aquí viene el aporte principal de este artículo: el sorteo debe ser aleatorio y reproducible. Esto se puede lograr usando un valor semilla al momento de realizar el muestreo. En el siguiente bloque de código de R uso como valor semilla la fecha de hoy para obtener una muestra de dos observaciones de mi tabla de preguntas1.\n\nset.seed(18042020)\nmuestra &lt;- dplyr::sample_n(preguntas, size = 2)\nprint(muestra)\n\n\n\n\nPreguntasHoraContraseñaPregunta2020-04-17 22:42:12sEcVwNCLpKqf8oH3El funcionario Fulano ha declarado X en el medio A. ¿Es esta la postura oficial del gobierno?2020-04-17 22:38:38sEcVwNCLpKqf8oH3Las periodistas Fulana y Mengana denunciaron los hechos 1 y 2 ocurridos en las regiones X y Z. ¿Qué medidas está tomando el ministerio A para prevenir que vuelvan a ocurrir?\n\n\nAhora, cualquier persona que tenga acceso a la tabla de preguntas puede reproducir el resultado de mi “elección” aleatoria usando el valor semilla.\n\n\nPaso 3: Comunicar los resultados\nAdemás de contestar las preguntas que fueron escogidas, es necesario que se hagan públicos la tabla de preguntas y el valor semilla utilizado para el muestreo (compartir el código utilizado sería incluso más útil). Esto puede servir de oportunidad para compartirse de manera conjunta con un resumen indicando las preguntas escogidas y sus respectivas respuestas.\nLa “elección” de preguntas tendría que hacerse con el tiempo prudente para preparar respuestas satisfactorias y descartar preguntas repetidas o inútiles (riesgos latentes). En este artículo no se propone que se haga esta elección en medio de la conferencia de prensa.\n\n\nPaso 4: Repetir\nPara la siguiente conferencia de prensa basta con limpiar los registros anteriores o filtrarlos de acuerdo a la nueva fecha. En caso se de decida, podrían actualizarse las contraseñas de los medios.\n\n\nExtra: Tiempo usado\nPara crear el formulario en Google Forms demoré menos de diez minutos. El proceso de muestreo de la tabla con valor semilla fue practicamente instantáneo.\nEn el siguiente bloque uso código R para demostrar que se tarda mucho menos de un segundo crear una gran cantidad de contraseñas para medios de comunicación.\n\n# Creando conjunto de caracteres alfanumericos con\n# minúsculas, mayúsculas y números\nalfanumericos &lt;- c(letters, LETTERS, 0:9)\n\n# Creando función para replicar \n# creación de contraseña\ncrear_contraseñas &lt;- function(conjunto, numero) {\n  \n  replicate(numero, \n            paste0(sample(x = conjunto, \n                          size = 16, \n                          replace = TRUE), \n                   collapse = \"\")\n            )\n}\n\n# Cantidad de milisegundos requeridos \n# para crear n contraseñas\nmicrobenchmark::microbenchmark(\n  `300` = {crear_contraseñas(alfanumericos, 300)},\n  `500` = {crear_contraseñas(alfanumericos, 500)},\n  `1000`= {crear_contraseñas(alfanumericos, 1000)}\n    )\n\nUnit: milliseconds\n expr    min      lq     mean  median      uq     max neval\n  300 1.7344 1.91340 2.180119 1.98355 2.08305  8.4451   100\n  500 2.8867 3.22575 4.003261 3.31395 3.49825 17.0386   100\n 1000 5.8849 6.41900 7.448767 6.61120 6.93875 27.1786   100\n\n\nViendo el cruce de la fila “1000” con la columna “mean”, vemos que en promedio requiere poquísimos milisegundos crear 1000 contraseñas diferentes. Usando 16 caracteres alfanuméricos, es posible obtener hasta \\(62^{16}\\) contraseñas únicas (equivalente a \\(4.76*10^{28}\\))."
  },
  {
    "objectID": "posts/2020-04-18-propuesta-para-elegir-preguntas-en-conferencia-de-prensa/index.html#footnotes",
    "href": "posts/2020-04-18-propuesta-para-elegir-preguntas-en-conferencia-de-prensa/index.html#footnotes",
    "title": "Propuesta para elegir preguntas en conferencia de prensa",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nUtilizo en un bloque oculto flextable::flextable() para imprimir la tabla con el formato adecuado.↩︎"
  },
  {
    "objectID": "posts/2021-01-24-cedula-2020-ggplot2-parte-3/index.html",
    "href": "posts/2021-01-24-cedula-2020-ggplot2-parte-3/index.html",
    "title": "Cédula Elecciones 2020 usando ggplot2 (parte 3)",
    "section": "",
    "text": "En el post anterior logramos agregarle texto al esqueleto de nuestra cédula. Ahora debemos aprender a agregarle imágenes. Iniciamos, como siempre, haciendo uso de nuestros paquetes predilectos.\n\nlibrary(tidyverse)\n\n\nLo básico\nPara poder entender cómo se logra insertar los logos de los partidos políticos hace falta primero entender cómo insertar imágenes a un gráfico de ggplot2. Hasta la fecha, la forma más conveniente que he encontrado es haciendo uso de annotation_custom(). Esta función toma como primer argumento un grob, un objeto que sirve como bloque básico de construcción de todos los gráficos de ggplot2. Para lo que buscamos hacer, colocar los logos de los partidos dentro del gráfico, necesitamos convertir nuestras imágenes en grobs.\nPara que R interprete nuestras imágenes, hacemos uso de la función load.image() del paquete imager. Con el objeto obtenido hacemos uso de la función rasterGrob() del paquete grid, para obtener el grob necesario. Finalmente, annotation_custom() nos permite colocar el grob usando una sintaxis muy similar a la que hemos usado anteriormente con geom_rect(). Con el siguiente ejemplo, que usa el logo de esta página, debería quedar más claro.\n\nurl_ejemplo &lt;- \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/68/Orange_tabby_cat_sitting_on_fallen_leaves-Hisashi-01A.jpg/800px-Orange_tabby_cat_sitting_on_fallen_leaves-Hisashi-01A.jpg\"\nimagen_ejemplo &lt;- imager::load.image(url_ejemplo)\ngrob_ejemplo &lt;- grid::rasterGrob(imagen_ejemplo)\n\nggplot()+\n  xlim(c(0,10))+\n  ylim(c(0,10))+\n  annotation_custom(grob = grob_ejemplo,\n                    xmin = 0, xmax = 10,\n                    ymin = 0, ymax = 10)\n\n\n\n\n\n\nLo real\nAhora que hemos entendido cómo funciona el procedimiento de agregar las imágenes, estamos listos para agregar los logos a nuestra cédula. Podríamos repetir el procedimiento anterior por cada partido en contienda, sin embargo, aprovechemos las ventajas de usar R para hacerlo más rápido (no necesariamente más sencillo).\nLo primero será tener los enlaces a todos los logos de los partidos. Esto es posible debido a que el portal Voto Informado cuenta con todos ellos. El vector logo_url fue creado manualmente para contener todos los logos, a excepción del de Todos por el Perú debido a que fue eliminado de la contienda por el JNE. En nuestro vector aparece como un NA.\n\nlogo_url &lt;- c(\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/2160.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/1366.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/1264.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/55.JPG\",\n  NA,\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/1257.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/2840.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/4.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/2173.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/5.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/2731.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/47.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/14.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/2191.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/32.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/2649.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/2646.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/2235.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/2218.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/2190.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/22.JPG\",\n  \"https://votoinformado.jne.gob.pe/voto/Resources/imgs/logoop/15.JPG\"\n)\n\nAhora que contamos con los enlaces, creamos una función que nos permita repetir el proceso de crear los grobs, de tal modo que podamos usarla sistemáticamente. La función que estamos creando, grob_url(), devuelve los valores NA. El argumento interpolate = TRUE dentro de grid::rasterGrob() ayuda a mejorar la calidad de la imagen.\n\ngrob_url &lt;- function(fileurl){\n  if(is.na(fileurl)) return(NA)\n  img &lt;- imager::load.image(fileurl)\n  grob &lt;- grid::rasterGrob(\n    img, \n    interpolate=TRUE)\n  \n  grob\n}\n\nAhora que contamos con una función que cumple nuestros objetivos, la aplicamos a todos los enlaces contenidos en logo_url. Para ello hacemos uso de la función map() del paquete purrr. Debido a que map() siempre nos devuelve una lista, usamos la función tibble() para crear un objeto tibble con una sola columna (grob), que contiene cada uno de nuestros grobs. Es el mismo nombre que el primer argumento de annotation_custom(), y tiene un motivo que descubriremos más adelante. El objeto grob ahora es una tabla que contiene listas en su única columna, pero nos permite trabajar con ella como si fuera cualquier data.frame normal.\n\ngrob &lt;- map(logo_url, grob_url) %&gt;% \n  tibble(grob = .)\n\nhead(grob)\n\n# A tibble: 6 × 1\n  grob      \n  &lt;list&gt;    \n1 &lt;rastrgrb&gt;\n2 &lt;rastrgrb&gt;\n3 &lt;rastrgrb&gt;\n4 &lt;rastrgrb&gt;\n5 &lt;lgl [1]&gt; \n6 &lt;rastrgrb&gt;\n\n\nAhora podemos hacer uso de annotation_custom() en cada uno de nuestros grobs. Recordemos los argumentos que esta función necesita:\n\ngrob: Es el grob que será dibujado en el gráfico.\nxmin: El primer valor del eje X, o posición de la esquina izquierda de la imagen.\nxmax: El segundo valor del eje X, o posición de la esquina derecha de la imagen.\nymin: El primer valor del eje Y, o posición de la esquina inferior de la imagen.\nymax: El segundo valor del eje Y, o posición de la esquina superior de la imagen.\n\nYa tenemos nuestros grobs mapeados en el tibble grob, ahora necesitamos los otros cuatro argumentos. Sin embargo, estos ya los teníamos desde hace muchísimo antes. Están contenidos en el tibble preferencial que creamos en la primera parte cuando usamos geom_rect() para dibujar los cuadros para voto preferencial.\n\nhead(preferencial)\n\n# A tibble: 6 × 4\n   xmin  xmax  ymin  ymax\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  10.8  11.8  27.3  28.3\n2  10.8  11.8  26.1  27.1\n3  10.8  11.8  24.9  25.9\n4  10.8  11.8  23.7  24.7\n5  10.8  11.8  22.5  23.5\n6  10.8  11.8  21.3  22.3\n\n\nEntonces, lo que necesitamos hacer ahora es unir ambos tibbles con bind_cols() del paquete dplyr(). Luego usamos filter() para librarnos del valor NA porque ya no es útil (de hecho, si lo dejamos ocasionaremos un bug que me costó más tiempo del debido identificar). Finalmente, utilizamos pmap() del paquete purrr para usar cada fila de nuestri tibble como lista de argumentos de annotation_custom(). Con esto, hemos conseguido la lista annotations con la que podemos graficar todos los logos.\n\nannotations &lt;- grob %&gt;% \n  bind_cols(preferencial) %&gt;% \n  filter(!is.na(grob)) %&gt;% \n  pmap(annotation_custom)\n\nSin embargo, unir todos los annotations no es tan sencillo como hacer cedula + annotations debido a que annotation_custom() no se comporta como un geom_*. Será necesario crear una función que nos permita hacer una suma recursiva de todos los elementos: rec_ggadd() toma un objeto de ggplot2 y una lista para añadir recursivamente sus elementos al objeto. El tercer argumento es un iterador que permite la recursividad, y no necesita ser identificado por quien use la función.\n\nrec_ggadd &lt;- function(ggobj, lista, i = length(lista)){\n  if(i == 1){\n    ggobj + lista[[i]]\n  } else {\n    ggobj &lt;- ggobj + lista[[i]]\n    rec_ggadd(ggobj, lista, i = i-1)\n  }\n}\n\nAhora sí, sólo queda aplicar la función a nuestra cedula y habremos conseguido lo que tanto deseábamos.\n\ncedula &lt;- rec_ggadd(cedula, annotations)\n\nImprimimos cedula para ver que todo salió bien.\n\ncedula\n\n\nggsave(\"cedula-parte-3.png\", cedula)\n\nSaving 3 x 6.4 in image"
  },
  {
    "objectID": "posts/2022-08-09-monitorear-ejecuci-n-presupuestal-desde-r/index.html",
    "href": "posts/2022-08-09-monitorear-ejecuci-n-presupuestal-desde-r/index.html",
    "title": "Monitorear ejecución presupuestal desde R",
    "section": "",
    "text": "Este post marca el lanzamiento oficial de un nuevo paquete para R llamado {perutranspaeconomica}. El paquete cuenta con sitio web oficial y repositorio en Github. Su objetivo es acceder a los datos de ejecución presupuestal de las unidades ejecutoras (entidades públicas) que operan en el país.\nEl paquete es mejor aprovechable para las personas que estén familiarizadas con el Portal de seguimiento a la ejecución de gasto presupuestal del Ministerio de Economía y Finanzas. Hasta el momento, sirve para hacer consultas a partir del 2012. Con el paso del tiempo (y con algo de apoyo de la comunidad) puede ampliarse para abarcar años anteriores.\nComo ejemplo, podemos ver cuánto se presupuesto y gastó en el año 2021 en todo el país. Comenzamos por cargar el paquete y la colección tidyverse para facilidad de tratamiento de los datos.\n\nlibrary(perutranspaeconomica)\nlibrary(tidyverse)\n\nPara hacer la consulta, podemos usar la función gasto(). Con esto obtenemos una tabla muy similar a la de la plataforma del MEF. Para apreciar mejor la información, la convierto en un objeto JSON.\n\ngasto(year = 2021) |&gt; \n    jsonlite::toJSON(pretty = TRUE)\n\nPara ver una evolución en el tiempo, podemos usar una consulta iterativa. Así aprovechamos mejor las oportunidades del paquete.\n\nconsulta &lt;- 2012:2021 |&gt; \n    map_dfr(~gasto(year = .x))\n\nconsulta\n\nPor último, podemos graficar los datos obtenidos. En este caso, para conocer la evolución en la ejecución presupuestal del Estado peruano desde el 2012 al 2021.\n\nconsulta |&gt; \n    ggplot(aes(year, avance_percent)) +\n    geom_line() +\n    geom_label(aes(label = avance_percent))\n\nComo se puede ver, la ejecución presupuestal ha sido superior al 80% en los últimos años, pero nunca alcanzó el 90% de lo presupuestado.\nSin usar el paquete habría sido necesario:\n\nNavegar la plataforma año por año\nPara cada año, descargar un archivo excel con la información\nJuntar todas las tablas en un solo archivo.\nProcesar la información y generar el gráfico\n\n¡El paquete permitió saltarse los tres primeros pasos! Una consulta más compleja hubiese requerido más tiempo repetido en los pasos 1 y 2. Este es un ejemplo simple para demostrar las posibilidades de usar la información que tenemos a la mano."
  },
  {
    "objectID": "posts/2021-08-15-grafico-de-parlamento/index.html",
    "href": "posts/2021-08-15-grafico-de-parlamento/index.html",
    "title": "¿Cómo hacer un gráfico de parlamento en R?",
    "section": "",
    "text": "Para esta tarea vamos a hacer de uso dos paquetes principalmente: el viejo conocido tidyverse y también de ggpol, una extensión de ggplot2 desarrollada especialmente para este tipo de gráficos. ggforce nos servirá al final sólo para una mejora estética.\n\nlibrary(tidyverse)\nlibrary(ggpol)\nlibrary(ggforce)\n\nComo en todo gráfico que se realiza con ggplot2, necesitamos primero contar con un data.frame o tibble que contenga la información necesaria para construirlo. La fuente primaria de estos datos es la web de la ONPE, de donde se puede obtener el detalle de la votación por varios niveles de desagregación. Debido a que no es propósito de este post mostrar cómo hacer el scrapping de la información, ni el cálculo de las curules, voy a preferir un resumen que ya ha trabajado otra persona para graficar en base a ello.\nEn la web de José Incio podemos encontrar un cuadro de la distribución de escaños del nuevo congreso peruano. Debido a que esa información aún está actualizándose según el conteo de los votos que ONPE sigue realizando, quiero hacer uso de Sys.time() para mostrar la hora en que estoy escribiendo este post.\n\nSys.time()\n\n[1] \"2023-04-26 15:38:42 -05\"\n\n\nHaciendo uso del add-in Paste as tribble que el paquete datapasta incluye en RStudio, puedo obtenr el tibble congreso, que no es más que un copy/paste de la tabla elaborada por José Incio disponible a esta hora.\n\nvotos &lt;- tibble::tribble(\n                                          ~Partido, ~Escaños,\n                                  \"ACCION POPULAR\",      25L,\n                        \"ALIANZA PARA EL PROGRESO\",      22L,\n   \"FRENTE POPULAR AGRICOLA FIA DEL PERU - FREPAP\",      15L,\n                                  \"FUERZA POPULAR\",      15L,\n                               \"UNION POR EL PERU\",      13L,\n                  \"PARTIDO DEMOCRATICO SOMOS PERU\",      11L,\n                                    \"PODEMOS PERU\",      11L,\n  \"EL FRENTE AMPLIO POR JUSTICIA, VIDA Y LIBERTAD\",       9L,\n                                  \"PARTIDO MORADO\",       9L\n  )\n\nEl siguiente paso es mejorar el tibble de tal modo que nos permita realizar el gráfico deseado. Empezamos por agregarle un color a cada uno de los partidos presentes en el gráfico. Podemos guiarnos de una hoja de referencia para escoger los colores, tomando en cuenta los colores partidarios. Podemos unir los colores a los partidos haciendo uso de bind_cols()\n\ncongreso &lt;- tibble(\n  colores = c(\n  \"darkred\",\n  \"dodgerblue4\",\n  \"deepskyblue3\",\n  \"darkorange2\",\n  \"gold2\",\n  \"brown3\",\n  \"royalblue3\",\n  \"forestgreen\",\n  \"mediumpurple4\"\n)) %&gt;% \n  bind_cols(votos)\n\nAhora que contamos con los datos, simplemente realizamos el gráfico. Hacemos uso de geom_parliament() del paquete ggpol. Tan sólo necesitamos mapear dos argumentos:\n\nseats: la cantidad de escaños o asientos obtenidos\nfill: el nombre de los partidos\n\nAdemás de eso, usaremos scale_fill_manual() para utilizar nuestros colores personalizados y el nombre de los partidos en la leyenda del gráfico. Luego, coord_fixed() nos ayuda a preservar el ratio de aspecto del gráfico.\n\ngrafico &lt;- ggplot(congreso)+\n  geom_parliament(\n    aes(\n      seats = Escaños, \n      fill = Partido), \n    color = \"white\") +\n  scale_fill_manual(\n    values = congreso$colores, \n    labels = congreso$Partido) +\n  coord_fixed()\n\nprint(grafico)\n\nWarning: Using the `size` aesthetic in this geom was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` in the `default_aes` field and elsewhere instead.\n\n\n\n\n\n\n\n\n\nVemos que hemos obtenido el gráfico y los partidos aparecen pintados con los colores que hemos asignado. Sin embargo, aún es posible hacerle unas mejoras estéticas. Usamos theme_no_axes() del paquete ggforce para eliminar las líneas guía de nuestro plano cartesiano y quedarnos sólo con un marco negro. También usamos labs() para agregarle un título a nuestro gráfico y theme() para cambiar el tamaño de los elementos de nuestra leyenda.\n\ngrafico +\n  theme_no_axes() +\n  labs(\n    title = \"DISTRIBUCIÓN DE ESCAÑOS\") +\n  theme(\n    legend.text = element_text(\n      size=5),\n    legend.key.size = unit(\n      x = 3, \n      units = \"mm\"))\n\n\n\n\n\n\n\n\nYa tenemos un gráfico más presentable y sencillo de replicar."
  },
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Proyectos",
    "section": "",
    "text": "Calculadora RENACYT\n\n\nUna aplicación que permite obtener un cálculo de calificación y clasificación al registro RENACYT de acuerdo a la normativa más reciente (agosto 2021).\n\n\n\n\n\n\n\n\n\n\n\nPaquetes para R\n\n\nUna colección de paquetes creados por mí\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/packages/index.html",
    "href": "projects/packages/index.html",
    "title": "Paquetes para R",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "posts/2022-07-23-bug-arreglado-en-calculadora-renacyt/index.html",
    "href": "posts/2022-07-23-bug-arreglado-en-calculadora-renacyt/index.html",
    "title": "Bug arreglado en Calculadora Renacyt",
    "section": "",
    "text": "Este breve post describe un problema que se había encontrado en la Calculadora Renacyt.\nEn el mes de mayo de este año hice cambios en el repositorio para poder usar shiny modules, con la esperanza de que así fuera más solucionar cualquier problema en la aplicación.\nLamentablemente, esto introdujo un bug en la aplicación debido a un desafortunado error de tipeo que ocasionaba que la suma del puntaje total ignore el puntaje en formación académica y sume dos veces el puntaje en producción científica. Gracias a los reportes de Rolando Montenegro y Mg. Vitelio Asencios Tarazona pude localizar el problema y corregirlo. ¡Esa es la magia del código abierto!\nTambién quiero aprovechar para anunciar que la app estará siendo alojada en un nuevo servidor que no tiene límites de uso: https://apps.samuelenrique.com/calculadora-renacyt . La sección de proyectos de esta web ahora dirigirá a este enlace.\nEn el raro caso de que ese enlace falle, se puede seguir usando el anterior: https://samuelcalderon.shinyapps.io/caluladora-renacyt/\nSi alguien encuentra errores o es necesario actualizar la app, la manera más directa de encontrarme pos vía Twitter: https://twitter.com/samucalse"
  },
  {
    "objectID": "posts/2020-04-25-codigo-noob-de-js/index.html",
    "href": "posts/2020-04-25-codigo-noob-de-js/index.html",
    "title": "Código noob de JS",
    "section": "",
    "text": "Este es sólo un recordatorio de un código escrito en JavaScript mientras aprendía, para recordarle a mi yo futuro que ya debería conocer una mejor forma de hacerlo."
  },
  {
    "objectID": "posts/2020-04-25-codigo-noob-de-js/index.html#basic-algorithm-scripting-mutations",
    "href": "posts/2020-04-25-codigo-noob-de-js/index.html#basic-algorithm-scripting-mutations",
    "title": "Código noob de JS",
    "section": "Basic Algorithm Scripting: Mutations",
    "text": "Basic Algorithm Scripting: Mutations\nReturn true if the string in the first element of the array contains all of the letters of the string in the second element of the array.\nFor example, [“hello”, “Hello”], should return true because all of the letters in the second string are present in the first, ignoring case.\nThe arguments [“hello”, “hey”] should return false because the string “hello” does not contain a “y”.\nLastly, [“Alien”, “line”], should return true because all of the letters in “line” are present in “Alien”.\nfunction mutation(arr) {\n  // a minusculas las dos palabras\n  let arr2 = arr.map(el =&gt; el.toLowerCase());\n  // segunda palabra a array\n  let word2 = arr2[1].split(\"\");\n  // indice de aparicion de letra de palabra 2 en palabra 1\n  let indices = word2.map(el =&gt; arr2[0].search(el));\n  // test logico para ver si existe un '-1' en indices\n  let bool = indices.map(el =&gt; el &gt;= 0);\n  // se ordena el array bool y se obtiene el primer elemento\n  // si hay 'false' siempre estará delante\n  return bool.sort()[0];\n}\n\nlet res = mutation([\"Hello\", \"hey\"]);\n//let res2 = [true, false, true, false];\nconsole.log(res);\n\n\n&gt;false"
  },
  {
    "objectID": "docs/about/index.html",
    "href": "docs/about/index.html",
    "title": "web",
    "section": "",
    "text": "Redirect"
  }
]