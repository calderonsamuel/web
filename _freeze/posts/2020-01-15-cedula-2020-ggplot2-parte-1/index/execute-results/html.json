{
  "hash": "5f84f5c93020570463e3a91d3ef60df0",
  "result": {
    "markdown": "---\ntitle: 'Cédula Elecciones 2020 usando ggplot2 (parte 1)'\ndescription: 'Código y explicación para generar una cédula de elecciones congresales - Diseño'\nauthor: Samuel Calderon\ndate: '2020-01-15'\nimage: \"cedula-parte-1.png\"\n\nexecute: \n  warning: false\n---\n\n\n\n\n\nNo tengo conocimiento sobre el software que ha utilizado ONPE para diseñar la cédula que se utilizará en nuestras elecciones congresales, pero es posible intentar replicarla en R, usando funciones de la colección de paquetes del `tidyverse`. \n\nPara ello, primero cargamos los paquetes.  Omitiré aquí los mensajes y warnings que aparecerán en una sesión normal. Además, en general utilizaré una línea por cada parámetro en las funciones que utilice, de modo que sea fácil de visualizar el código en teléfonos móviles. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\nEl siguiente paso será crear una superficie en la que irá el gráfico. Usaremos las funciones de `ggplot2` para esto y para todas las futuras personalizaciones. Utilizaremos un ancho de 15 unidades (eje x) y un alto de 32 unidades (eje y) para mantener las proporciones definidas por la ONPE en la [RESOLUCIÓN JEFATURAL Nº 000263-2019-JN/ONPE](https://busquedas.elperuano.pe/normaslegales/aprueban-modelos-definitivos-de-cedulas-de-sufragio-para-vot-resolucion-jefatural-n-000263-2019-jnonpe-1835783-1/).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncedula <- ggplot()+\n  # límites del plano\n  xlim(c(0, 15))+\n  ylim(c(0, 32))\n\ncedula\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/limites-1.png){width=288}\n:::\n:::\n\n\nDebido a que las líneas divisorias y el fondo no nos ayudan para nuestros propósitos, nos vamos a deshacer de ellos usando `theme_void()`. Para mantener la referencia de los límites del gráfico, crearemos un marco con borde negro utilizando `geom_rect()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncedula <- cedula +\n  theme_void() +\n    # marco rectangular con borde negro\n    geom_rect(aes(xmin = 0, \n                  xmax = 15, \n                  ymin = 0, \n                  ymax = 32), \n              color = \"black\", \n              alpha = 0)\n\ncedula\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/marco-1.png){width=288}\n:::\n:::\n\n\nLo siguiente es establecer el espacio que ocuparán los elementos de la cédula. En este caso, podemos llamar `instrucciones` a los marcos de texto que contienen las instrucciones de cómo votar. Los nombres de las columnas del *tibble* `instrucciones` nos permitirán identificarlos con los parámetros de `geom_rect()` cuando lo agreguemos al gráfico.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstrucciones <- tribble(\n  ~xmin, ~xmax, ~ymin, ~ymax,\n  0.6,  11.8,  28.4,  29.9,\n  12.1,  14.4,  28.4,  29.9)\n\ncedula <- cedula +\n    # contenedores debajo del título con instruciones\n    geom_rect(data = instrucciones, \n              aes(xmin = xmin, \n                  xmax = xmax,\n                  ymin = ymin, \n                  ymax = ymax), \n              alpha = 0.25)\ncedula\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/instrucciones-1.png){width=288}\n:::\n:::\n\n\nLlamaremos`rectangulos` a los marcos en los que van contenidos los nombres de las agrupaciones políticas. Debido a que son varios contenedores y la distancia entre ellos es uniforme, crearemos los valores del eje Y usando un generador de secuencias. Los valores del eje X, en cambio, son constantes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrectangulos <- tibble(xmin = 0.6, \n                      xmax = 11.8, \n                      ymin= seq(\n                        from = 27.3, \n                        to = 2.1, \n                        by = -1.2), \n                      ymax = ymin + 1)\n\ncedula <- cedula +\n# rectángulos para nombres de partidos\n    geom_rect(data = rectangulos, \n              aes(xmin = xmin, \n                  xmax = xmax,\n                  ymin = ymin, \n                  ymax = ymax), \n              alpha = 0.15)\n\ncedula\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/rectangulos-1.png){width=288}\n:::\n:::\n\n\n\nEl *tibble* `preferencial` contiene los cuadrados en los que el votante puede marcar el logo de la agrupación política de su preferencia. Modificando un poco su ubicación el eje X en dos ocasiones, permitirá tener también los cuadrados de voto preferencial.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npreferencial <- tibble(\n  xmin = 10.8, \n  xmax = 11.8, \n  ymin= seq(\n    from = 27.3, \n    to = 2.1, \n    by = -1.2), \n  ymax = ymin + 1)\n\ncedula <- cedula +\n  # cuadrados para logo \n  geom_rect(data = preferencial, \n            aes(xmin = xmin, \n                xmax = xmax,\n                ymin = ymin, \n                ymax = ymax), \n            color = \"black\", \n            fill = \"white\") +\n  # cuadrado para voto preferencial 1\n  geom_rect(data = preferencial, \n            aes(xmin = xmin + 1.3, \n                xmax = xmax + 1.3,\n                ymin = ymin, \n                ymax = ymax), \n            color = \"black\", \n            fill = \"white\") +\n  # cuadrado para voto preferencial 1\n  geom_rect(data = preferencial, \n            aes(xmin = xmin + 2.6, \n                xmax = xmax + 2.6,\n                ymin = ymin, \n                ymax = ymax), \n            color = \"black\", \n            fill = \"white\")\n\ncedula\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/preferencial-1.png){width=288}\n:::\n:::\n\n\nEn la segunda parte del post explicaré cómo agregar el texto, tanto de los nombres de los partidos políticos como de las instrucciones para votar. \n\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}